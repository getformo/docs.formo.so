{
	"openapi": "3.0.0",
	"info": {
		"title": "Formo API",
		"version": "1.0.0",
		"description": "API for managing form webhook subscriptions, form responses, and event tracking"
	},
	"servers": [
		{
			"url": "https://api.formo.so/api",
			"description": "Forms API"
		},
		{
			"url": "https://events.formo.so",
			"description": "Events API"
		}
	],
	"components": {
		"securitySchemes": {
			"ApiKeyAuth": {
				"type": "apiKey",
				"in": "header",
				"name": "x-api-key"
			},
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "JWT Bearer token for authentication. Format: 'Bearer <token>'"
			}
		},
		"schemas": {
			"FormResponse": {
				"type": "object",
				"properties": {
					"formId": {
						"type": "string",
						"description": "Unique identifier of the form"
					},
					"formTitle": {
						"type": "string",
						"description": "Title of the form"
					},
					"submissionId": {
						"type": "string",
						"description": "Unique identifier of the submission"
					},
					"submittedAt": {
						"type": "string",
						"format": "date-time",
						"description": "Timestamp of form submission"
					}
				},
				"additionalProperties": true
			},
			"Error": {
				"type": "object",
				"properties": {
					"isSuccess": {
						"type": "boolean",
						"example": false
					},
					"message": {
						"type": "string"
					}
				}
			},
			"SuccessResponse": {
				"type": "object",
				"properties": {
					"isSuccess": {
						"type": "boolean",
						"example": true
					},
					"data": {
						"type": "object",
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/FormResponse"
								}
							}
						}
					}
				}
			},
			"Event": {
				"type": "object",
				"properties": {
					"channel": {
						"type": "string",
						"description": "Channel of the event"
					},
					"type": {
						"type": "string",
						"description": "Type of the event"
					},
					"anonymous_id": {
						"type": "string",
						"description": "Anonymous user identifier"
					},
					"user_id": {
						"type": "string",
						"description": "User identifier"
					},
					"address": {
						"type": "string",
						"description": "Wallet address"
					},
					"event": {
						"type": "string",
						"description": "Name of the event"
					},
					"context": {
						"type": "string",
						"description": "Event context as JSON string"
					},
					"properties": {
						"type": "string",
						"description": "Event properties as JSON string"
					},
					"version": {
						"type": "string",
						"description": "Event version"
					},
					"original_timestamp": {
						"type": "string",
						"format": "date-time",
						"description": "Original timestamp of the event"
					},
					"sent_at": {
						"type": "string",
						"format": "date-time",
						"description": "Timestamp when the event was sent"
					},
					"message_id": {
						"type": "string",
						"description": "Unique message identifier"
					}
				},
				"required": [
					"type",
					"channel",
					"anonymous_id",
					"user_id",
					"address",
					"event",
					"context",
					"properties",
					"version",
					"original_timestamp",
					"sent_at",
					"message_id"
				]
			}
		}
	},
	"paths": {
		"/webhooks/{formId}/poll": {
			"get": {
				"summary": "List Form Responses",
				"description": "Retrieves recent form responses with transformed field data",
				"operationId": "listFormResponses",
				"tags": ["Forms API"],
				"servers": [
					{
						"url": "https://api.formo.so/api",
						"description": "Forms API"
					}
				],
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"name": "formId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the form"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved form responses",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Form ID is required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Missing or invalid API key",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Insufficient permissions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Not Found - Form not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/webhooks": {
			"post": {
				"summary": "Subscribe to Form Events",
				"description": "Creates a new webhook subscription for form events",
				"operationId": "subscribeFormEvents",
				"tags": ["Forms API"],
				"servers": [
					{
						"url": "https://api.formo.so/api",
						"description": "Forms API"
					}
				],
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"formId",
									"targetUrl",
									"eventTypes"
								],
								"properties": {
									"formId": {
										"type": "string",
										"description": "The unique identifier of the form"
									},
									"targetUrl": {
										"type": "string",
										"description": "The URL that will receive webhook events"
									},
									"eventTypes": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"FORM_SUBMISSION",
												"FORM_UPDATED"
											]
										},
										"description": "Types of events to subscribe to"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully subscribed to webhook",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"isSuccess": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"type": "object",
											"properties": {
												"webhookId": {
													"type": "string",
													"description": "Unique identifier of the webhook subscription"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Missing required fields or invalid event types",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Missing or invalid API key",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Insufficient permissions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Unsubscribe from Form Events",
				"description": "Removes a webhook subscription",
				"operationId": "unsubscribeFormEvents",
				"tags": ["Forms API"],
				"servers": [
					{
						"url": "https://api.formo.so/api",
						"description": "Forms API"
					}
				],
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"name": "webhookId",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"description": "The unique identifier of the webhook subscription"
					},
					{
						"name": "targetUrl",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"description": "The URL that receives webhook events"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully unsubscribed from webhook",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"isSuccess": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"type": "object",
											"properties": {
												"message": {
													"type": "string",
													"example": "Webhook unsubscribed successfully"
												}
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Missing or invalid API key",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Insufficient permissions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Not Found - Webhook not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/v0/events": {
			"post": {
				"summary": "Track Event",
				"description": "Sends an event to the Formo Events API",
				"operationId": "trackEvent",
				"tags": ["Events API"],
				"servers": [
					{
						"url": "https://events.formo.so",
						"description": "Events API"
					}
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"default": "raw_events"
						},
						"description": "Name of the event pipeline"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Event"
							},
							"example": {
								"channel": "web",
								"type": "page",
								"anonymous_id": "c2bc0ebe-d852-49d1-9efd-e45744850ae0",
								"user_id": "a46e6878-1ed5-4a81-9185-83608df2fcb6",
								"address": "0x9CC3cB28cd94eB4423B15cdA73346e204f59a407",
								"event": "",
								"context": "{\"user_agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36\",\"locale\":\"en-US\",\"location\":\"ID\",\"timezone\":\"Asia/Saigon\",\"referrer\":\"https://chatgpt.com/\",\"utm_source\":\"chatgpt.com\",\"utm_medium\":\"linkedin\",\"utm_campaign\":\"early-access\",\"utm_term\":null,\"utm_content\":null,\"ref\":\"vitalik.eth\",\"page_url\":\"https://www.estore.com/best-seller/1\",\"page_path\":\"/best-seller/1\",\"page_title\":\"The best sellers offered by EStore\",\"library_name\":\"Formo Web SDK\",\"library_version\":\"1.16.2\"}",
								"properties": "{\"name\":\"Best Seller\",\"category\":\"Docs\",\"url\":\"https://formo.so/faucets?utm_source=chatgpt.com\",\"path\":\"/best-seller/1\",\"hash\":\"#submit\",\"title\":\"The best sellers offered by EStore\"}",
								"version": "0",
								"original_timestamp": "2025-04-23T13:15:17.000Z",
								"sent_at": "2025-04-23T13:15:18.000Z",
								"message_id": "48555101eee2f44ac0f0632fcb7c7c9f6ce0012ae395ae79f8a0d515e4f5e41f"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Event successfully tracked",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid event data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Missing or invalid Bearer token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		}
	}
}
